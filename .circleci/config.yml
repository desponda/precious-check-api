# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: preciouscheck/precious-check-build-image:2
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
    - checkout
    - setup_remote_docker:   # (2)
        docker_layer_caching: true # (3)
    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}
    # package and upload
    - run: mvn package
    - run: docker build . -t preciouscheck/precious-check-api:${CIRCLE_SHA1:0:5}
    - run: docker login --username ${DOCKERHUB_USERNAME} --password ${DOCKERHUB_PASS}
    - run: docker push preciouscheck/precious-check-api:${CIRCLE_SHA1:0:5}

  test:
    docker:
    # specify the version you desire here
    - image: preciouscheck/precious-check-build-image:2
    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "pom.xml" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: v1-dependencies-{{ checksum "pom.xml" }}
    # run tests!
    - run: mvn integration-test
    - run: mvn test
    - run: mvn sonar:sonar -Dsonar.projectKey=desponda_precious-check-api -Dsonar.organization=desponda-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${SONAR_KEY}
  deploy:
    docker:
    # specify the version you desire here
    - image: preciouscheck/precious-check-build-image:2
    steps:
    - checkout
    #deploy
    - run: aws cloudformation deploy --template-file ecs/preciouscheck-service.yaml --stack-name preciouscheck-ecs-service --parameter-overrides ImageVersion=${CIRCLE_SHA1:0:5} --region us-east-1




workflows:
  version: 2
  build_and_test:
    jobs:
    - build
    - test
    - deploy:
        requires:
        - build
        - test


